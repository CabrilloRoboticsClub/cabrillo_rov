#
# ansible_playbook_rov.yml
#
---

- name: install dependancies
  become: true
  hosts: all
  tasks:

  - name: apt update
    ansible.builtin.apt:
      update_cache: yes
      allow_unauthenticated: yes

  - name: apt upgrade
    ansible.builtin.apt:
      upgrade: yes
      allow_unauthenticated: yes

  - name: apt install depends
    ansible.builtin.apt:
      name:
      - net-tools
      - ipython3
      - python3-pip
      - python3-smbus
      - vim

  - name: pip install depends
    ansible.builtin.pip:
      state: latest
      name:
      - setuptools
      - adafruit-python-shell
      - pigpio
      - adafruit-circuitpython-pca9685
      - adafruit-circuitpython-servokit
      - adafruit-circuitpython-lsm6ds
      - adafruit-circuitpython-lis3mdl
      - adafruit-circuitpython-mpu6050

  - name: add ros apt repo key
    ansible.builtin.apt_key:
      url: https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc

  - name: add ros apt repo
    ansible.builtin.apt_repository:
      repo: deb http://packages.ros.org/ros/ubuntu focal main

- name: install ros base on rov
  become: true
  hosts: rov
  tasks:

  - name: apt install ros (THIS MAY TAKE A WHILE)
    ansible.builtin.apt:
      name:
      - ros-noetic-ros-base

- name: install ros desktop on shore
  become: true
  hosts: shore
  tasks:

  - name: apt install ros (THIS MAY TAKE A WHILE)
    ansible.builtin.apt:
      name:
      - ros-noetic-desktop-full

- name: install supplimentary software
  become: true
  hosts: all
  tasks:

  - name: apt install ros extensions
    ansible.builtin.apt:
      name:
      - ros-noetic-robot-pose-ekf
      - ros-noetic-robot-localization
      - ros-noetic-imu-filter-madgwick
      - python3-rosdep
      - python3-rosinstall
      - python3-rosinstall-generator
      - python3-wstool
      - python3-rospy
      - build-essential
      - ros-noetic-joy
      #- ros-noetic-joystick-drivers
      - ros-noetic-robot-localization
      - ros-noetic-usb-cam
      - ros-noetic-geometry-msgs
      - ros-noetic-sensor-msgs


- name: hydrozoa rov download cabrillo_rov git repo
  hosts: all
  tags: git-repo
  tasks:

  - name: git clone or pull cabrillo_rov
    ansible.builtin.git:
      dest: /home/{{ansible_user}}/cabrillo_rov
      repo: https://github.com/cabrillorobotics/cabrillo_rov.git
      track_submodules: yes

- name: disable dell onboard acceleromiter
  hosts: shore
  tasks:
  - name: modprobe.d/blacklist.conf
    ansible.builtin.blockinfile:
      path: /etc/modprobe.d/blacklist.conf
      block: |
        blacklist lis3lv02d_i2c
        blacklist lis3lv02d

- name: hydrozoa rov pi hardware config
  hosts: rov
  become: yes
  tasks:

  - name: add ubuntu to i2c group
    ansible.builtin.user:
      append: yes
      groups: i2c
      name: ubuntu

  - name: rosdep init
    ansible.builtin.shell:
      chdir: /home/{{ansible_user}}/cabrillo_rov
      cmd: rosdep init && rosdep update
    ignore_errors: yes

  - name: enable i2c
    ansible.builtin.lineinfile:
      path: /etc/udev/rules.d/99-com.rules
      create: yes
      line: SUBSYSTEM=="ic2-dev", GROUP="i2c", MODE="0660"

  - name: add pigpio service
    ansible.builtin.blockinfile:
      path: /lib/systemd/system/pigpiod.service
      create: yes
      block: |
        [Unit]
        Description=Daemon required to control GPIO pins via pigpio
        [Service]
        ExecStart=/usr/local/bin/pigpiod
        ExecStop=/bin/systemctl kill -s SIGKILL pigpiod
        Type=forking
        [Install]
        WantedBy=multi-user.target

  - name: add startup script to root crontab
    ansible.builtin.cron:
      user: ubuntu
      name: rov startup script
      special_time: reboot
      job: /home/ubuntu/cabrillo_rov/misc/rov_startup.sh > /tmp/rov_startup_log1 2> /tmp/rov_startup_log2

  - name: add ros setup to bashrc
    ansible.builtin.lineinfile:
      path: /home/{{ansible_user}}/.bashrc
      line: source /opt/ros/noetic/setup.bash

  - name: reboot hydrozoa
    ansible.builtin.reboot:

